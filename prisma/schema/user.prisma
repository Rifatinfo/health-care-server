
model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
  password String
  role UserRole @default(PATIENT)
  needPasswordChange Boolean @default(true)
  status UserStatus @default(ACTIVE)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
  admin Admin[]
  doctor Doctor[]
  patient Patient[]
}

model Doctor {
  id String @id @default(uuid())
  name String?
  email String @unique
  profilePhoto String?
  contactNumber String
  address String?
  registrationNumber String
  experience Int @default(0)
  gender Gender
  appointmentFee Int
  qualification String
  currentWorkingPlace String
  designation String
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [email], references: [email])

  doctorSchedules DoctorSchedules[]
  @@map("doctors")
  doctorSpecialties DoctorSpecialties[]
  appointment Appointment[]
  prescription Prescription[]
}

model Patient {
  id String @id @default(uuid())
  name String?
  email String @unique
  profilePhoto String?
  address String?
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [email], references: [email])

  @@map("patients")
  appointment Appointment[]
  prescription Prescription[]
}

model  Admin {
  id String @id @default(uuid())
  name String?
  email String @unique
  profilePhoto String?
  contactNumber  String?
  isDeleted Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [email], references: [email])

  @@map("admins")
}

